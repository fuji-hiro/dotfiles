# http://d.hatena.ne.jp/yuroyoro/20101008/1286531851
[user]
  name = shirai
  email = tatsuya.py@gmail.com
[color]
  # colorの設定(以下のコマンドは自動で色つける)
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
[push]
  # defaultのpush先はtrackingしているリポジトリ
  default = tracking
[core]
  # globalな.gitignoreの指定
  excludesfile = ~/.gitignore
  # CRLFを自動変換
  autocrlf = input
[alias]
  st = status
  sh = show
  so = remote show origin
  ft = fetch
  up = pull --rebase
  rbm = rebase master
  ad = add
  ci = commit -a
  cam = commit -a --amend
  co = checkout
  # branch関連
  br = branch
  ba = branch -a
  bm = branch --merged
  bn = branch --no-merged
  # log関連
  wc = whatchanged
  ls = log --stat
  lp = log -p
  # ざっくりログ出す
  la = log --pretty=\"format:%ad %h (%an): %s\" --date=short
  lr = log origin          # originのlog
  oneline = log --pretty=oneline
  ranking = shortlog -s -n --no-merges
  # logをtree表示
  log-graph = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
  log-all = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
  # diff関連
  dm = diff master           # masterとのdiff
  dw = diff --color-words    # 単語単位でいろつけてdiff
  dc = diff --cached         # addされているものとのdiff
  ds = diff --staged         # 同上(1.6.1移行)
  d1 = diff HEAD~            # HEADから1つ前とdiff
  d2 = diff HEAD~~           # HEADから2つ前とdiff
  d3 = diff HEAD~~~          # HEADから3つ前とdiff
  d4 = diff HEAD~~~~         # HEADから4つ前とdiff
  d5 = diff HEAD~~~~~        # HEADから5つ前とdiff
  d10 = diff HEAD~~~~~~~~~~  # HEADから10前とdiff
  # mergeの際にconflictが起きたファイルを編集
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
  # mergeの際にconflictが起きたファイルをadd
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
  # grep関連
  gr = grep
  gn = grep -n
